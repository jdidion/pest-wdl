Strings
=======

version 1.1

workflow Test {
    String s1 = ""
    String s2 = ''
    String s3 = "hello"
    String s4 = "hello \"John\", how are you?"
    String s5 = 'hello'
    String s6 = 'hello \'John\', how are you?'
    String s7 = "hello 'John', how are you?"
    String s8 = 'hello "John", how are you?'
    String s9 = "hello ~{name}, how are you?"
    String s10 = "hello \"~{name}\", how are you?"
    String s11 = "hello ~{sep(" ", ['John', 'Doe'])}, how are you?"
}

=======

(document
  (version
    (version_identifier: "1.1")
  )
  (workflow
    (identifier: "Test")
    (bound_declaration
      (typedef
        (primitive_type: "String")
      )
      (identifier: "s1")
      (expression
        #[skip(depth = 8)]
        (dquote_string: "\"\"")
      )
    )
    (bound_declaration
      (typedef
        (primitive_type: "String")
      )
      (identifier: "s2")
      (expression
        #[skip(depth = 8)]
        (squote_string: "''")
      )
    )
    (bound_declaration
      (typedef
        (primitive_type: "String")
      )
      (identifier: "s3")
      (expression
        #[skip(depth = 8)]
        (dquote_string
          (dquote_literal: "hello")
        )
      )
    )
    (bound_declaration
      (typedef
        (primitive_type: "String")
      )
      (identifier: "s4")
      (expression
        #[skip(depth = 8)]
        (dquote_string
          (dquote_literal: "hello ")
          (dquote_escape_sequence: "\\\"")
          (dquote_literal: "John")
          (dquote_escape_sequence: "\\\"")
          (dquote_literal: ", how are you?")
        )
      )
    )
    (bound_declaration
      (typedef
        (primitive_type: "String")
      )
      (identifier: "s5")
      (expression
        #[skip(depth = 8)]
        (squote_string
          (squote_literal: "hello")
        )
      )
    )
    (bound_declaration
      (typedef
        (primitive_type: "String")
      )
      (identifier: "s6")
      (expression
        #[skip(depth = 8)]
        (squote_string
          (squote_literal: "hello ")
          (squote_escape_sequence: "\\'")
          (squote_literal: "John")
          (squote_escape_sequence: "\\'")
          (squote_literal: ", how are you?")
        )
      )
    )
    (bound_declaration
      (typedef
        (primitive_type: "String")
      )
      (identifier: "s7")
      (expression
        #[skip(depth = 8)]
        (dquote_string
          (dquote_literal: "hello 'John', how are you?")
        )
      )
    )
    (bound_declaration
      (typedef
        (primitive_type: "String")
      )
      (identifier: "s8")
      (expression
        #[skip(depth = 8)]
        (squote_string
          (squote_literal: "hello \"John\", how are you?")
        )
      )
    )
    (bound_declaration
      (typedef
        (primitive_type: "String")
      )
      (identifier: "s9")
      (expression
        #[skip(depth = 8)]
        (dquote_string
          (dquote_literal: "hello ")
          (tilde_placeholder
            (expression
              #[skip(depth = 8)]
              (identifier: "name")
            )
          )
          (dquote_literal: ", how are you?")
        )
      )
    )
    (bound_declaration
      (typedef
        (primitive_type: "String")
      )
      (identifier: "s10")
      (expression
        #[skip(depth = 8)]
        (dquote_string
          (dquote_literal: "hello ")
          (dquote_escape_sequence: "\\\"")
          (tilde_placeholder
            (expression
              #[skip(depth = 8)]
              (identifier: "name")
            )
          )
          (dquote_escape_sequence: "\\\"")
          (dquote_literal: ", how are you?")
        )
      )
    )
    (bound_declaration
      (typedef
        (primitive_type: "String")
      )
      (identifier: "s11")
      (expression
        #[skip(depth = 8)]
        (dquote_string
          (dquote_literal: "hello ")
          (tilde_placeholder
            (expression
              #[skip(depth = 8)]
              (apply
                (identifier: "sep")
                (expression
                  #[skip(depth = 8)]
                  (dquote_string
                    (dquote_literal: " ")
                  )
                )
                (expression
                  #[skip(depth = 8)]
                  (array
                    (expression
                      #[skip(depth = 8)]
                      (squote_string
                        (squote_literal: "John")
                      )
                    )
                    (expression
                      #[skip(depth = 8)]
                      (squote_string
                        (squote_literal: "Doe")
                      )
                    )
                  )
                )
              )
            )
          )
          (dquote_literal: ", how are you?")
        )
      )
    )
  )
)
